# Copyright (c) 2021-2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# build plugin interface
config("histreamer_pipeline_config") {
  include_dirs = [
    "//foundation/multimedia/histreamer/engine",
    "//foundation/multimedia/histreamer/engine/pipeline",
    "//foundation/multimedia/histreamer/engine/pipeline/filters",
    "//foundation/multimedia/histreamer/engine/pipeline/core",
  ]
}

source_set("histreamer_pipeline") {
  sources = [
    "core/compatible_check.cpp",
    "core/filter_base.cpp",
    "core/pipeline_core.cpp",
    "core/port.cpp",
    "factory/filter_factory.cpp",
    "filters/codec/audio_decoder/audio_decoder_filter.cpp",
    "filters/codec/codec_filter_base.cpp",
    "filters/common/plugin_settings.cpp",
    "filters/common/plugin_utils.cpp",
    "filters/demux/data_packer.cpp",
    "filters/demux/demuxer_filter.cpp",
    "filters/demux/type_finder.cpp",
    "filters/sink/audio_sink/audio_sink_filter.cpp",
    "filters/source/media_source/media_source_filter.cpp",
  ]
  public_configs = [ ":histreamer_pipeline_config" ]
  public_deps = [
    "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
    "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_core",
    "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_intf",
    "//foundation/multimedia/histreamer/engine/utils:histreamer_utils",
  ]
  if (!defined(ohos_lite)) {
    configs -= [
      "//build/config/compiler:no_rtti",
      "//build/config/compiler:no_exceptions",
    ]
  }
  cflags = [
    "-fPIC",
    "-Wall",
  ]

  if (!defined(ohos_lite)) {
    cflags += [
      "-frtti",
      "-fexceptions",
    ]
  }
  cflags_cc = cflags
  defines = [ "MEDIA_OHOS" ]
}
