# Copyright (c) 2021-2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import("//foundation/multimedia/histreamer/config.gni")

group("plugin_ffmpeg_adapter") {
  deps = []
  if (!hst_is_mini_sys) {
    deps += [
      ":histreamer_plugin_FFmpegAudioDecoders",
      ":histreamer_plugin_FFmpegDemuxer",
    ]
    if (histreamer_enable_video) {
      deps += [ ":histreamer_plugin_FFmpegVideoDecoders" ]
    }
  }
  if (hst_is_standard_sys && histreamer_enable_recorder) {
    deps += [
      ":histreamer_plugin_FFmpegAudioEncoders",
      ":histreamer_plugin_FFmpegMuxers",
    ]
    if (histreamer_enable_video) {
      deps += [ ":histreamer_plugin_FFmpegVideoEncoders" ]
    }
  }
}

config("plugin_ffmpeg_adapter_config") {
  include_dirs = [
    "//foundation/multimedia/histreamer/engine/include/",
    "//foundation/multimedia/histreamer/engine/plugin/",
    "//third_party/ffmpeg",
  ]
}

ohos_source_set("ffmpeg_adapter_common") {
  subsystem_name = "multimedia"
  part_name = "histreamer"
  sources = [ "utils/ffmpeg_utils.cpp" ]
  public_configs = [
    ":plugin_ffmpeg_adapter_config",
    "//foundation/multimedia/histreamer:histreamer_presets",
  ]
  public_deps = [
    "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
    "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
  ]
  if (hst_is_standard_sys) {
    public_deps += [ "//third_party/ffmpeg:libohosffmpeg" ]
    external_deps = [ "graphic_2d:surface" ]
  }
}

ohos_source_set("ffmpeg_audio_decoders") {
  subsystem_name = "multimedia"
  part_name = "histreamer"
  sources = [ "audio_decoder/audio_ffmpeg_decoder_plugin.cpp" ]
  public_configs = [
    ":plugin_ffmpeg_adapter_config",
    "//foundation/multimedia/histreamer:histreamer_presets",
  ]
  public_deps = [
    "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
    "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
  ]
  if (hst_is_standard_sys) {
    public_deps += [ "//third_party/ffmpeg:libohosffmpeg" ]
    external_deps = [ "graphic_2d:surface" ]
  }
}

ohos_source_set("ffmpeg_demuxers") {
  subsystem_name = "multimedia"
  part_name = "histreamer"
  sources = [
    "demuxer/ffmpeg_demuxer_plugin.cpp",
    "demuxer/ffmpeg_track_meta.cpp",
    "utils/aac_audio_config_parser.cpp",
    "utils/bit_reader.cpp",
  ]
  if (histreamer_enable_video) {
    sources += [ "utils/avc_config_data_parser.cpp" ]
  }
  public_configs = [
    ":plugin_ffmpeg_adapter_config",
    "//foundation/multimedia/histreamer:histreamer_presets",
  ]
  public_deps = [
    "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
    "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
  ]
  if (hst_is_standard_sys) {
    public_deps += [ "//third_party/ffmpeg:libohosffmpeg" ]
    external_deps = [ "graphic_2d:surface" ]
  }
}

if (hst_is_lite_sys) {
  # lite
  import("//build/lite/config/component/lite_component.gni")
  if (!hst_is_mini_sys) {
    lite_library("histreamer_plugin_FFmpegAudioDecoders") {
      target_type = "shared_library"
      sources = []
      deps = [
        ":ffmpeg_adapter_common",
        ":ffmpeg_audio_decoders",
      ]
      ldflags = [
        "-lavcodec",
        "-lswresample",
      ]
    }

    lite_library("histreamer_plugin_FFmpegDemuxer") {
      target_type = "shared_library"
      sources = []
      deps = [
        ":ffmpeg_adapter_common",
        ":ffmpeg_demuxers",
      ]
      ldflags = [
        "-lavformat",
        "-lavcodec",
      ]
    }
  }
} else {
  # standard
  import("//build/ohos.gni")
  ohos_shared_library("histreamer_plugin_FFmpegAudioDecoders") {
    subsystem_name = "multimedia"
    part_name = "histreamer"
    deps = [
      ":ffmpeg_adapter_common",
      ":ffmpeg_audio_decoders",
    ]
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
    }
    relative_install_dir = "media/histreamer_plugins"
  }

  ohos_shared_library("histreamer_plugin_FFmpegDemuxer") {
    subsystem_name = "multimedia"
    part_name = "histreamer"
    deps = [
      ":ffmpeg_adapter_common",
      ":ffmpeg_demuxers",
    ]
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
    }
    relative_install_dir = "media/histreamer_plugins"
  }

  ohos_shared_library("histreamer_plugin_FFmpegVideoDecoders") {
    subsystem_name = "multimedia"
    part_name = "histreamer"
    sources = [ "video_decoder/video_ffmpeg_decoder_plugin.cpp" ]
    public_configs = [
      ":plugin_ffmpeg_adapter_config",
      "//foundation/multimedia/histreamer:histreamer_presets",
    ]
    deps = [ ":ffmpeg_adapter_common" ]
    public_deps = [
      "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
      "//foundation/multimedia/histreamer/engine/plugin:histreamer_ffmpeg_convert",
      "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
      "//third_party/ffmpeg:libohosffmpeg",
    ]
    external_deps = [ "graphic_2d:surface" ]
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
    }
    relative_install_dir = "media/histreamer_plugins"
  }

  ohos_shared_library("histreamer_plugin_FFmpegAudioEncoders") {
    subsystem_name = "multimedia"
    part_name = "histreamer"
    sources = [
      "audio_encoder/audio_ffmpeg_encoder_plugin.cpp",
      "audio_encoder/ffmpeg_au_enc_config.cpp",
    ]
    public_configs = [
      ":plugin_ffmpeg_adapter_config",
      "//foundation/multimedia/histreamer:histreamer_presets",
    ]
    deps = [ ":ffmpeg_adapter_common" ]
    public_deps = [
      "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
      "//foundation/multimedia/histreamer/engine/plugin:histreamer_ffmpeg_convert",
      "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
      "//third_party/ffmpeg:libohosffmpeg",
    ]
    external_deps = [ "graphic_2d:surface" ]
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
    }
    relative_install_dir = "media/histreamer_plugins"
  }

  ohos_shared_library("histreamer_plugin_FFmpegVideoEncoders") {
    subsystem_name = "multimedia"
    part_name = "histreamer"
    sources = [
      "video_encoder/ffmpeg_vid_enc_config.cpp",
      "video_encoder/video_ffmpeg_encoder_plugin.cpp",
    ]
    public_configs = [
      ":plugin_ffmpeg_adapter_config",
      "//foundation/multimedia/histreamer:histreamer_presets",
    ]
    deps = [ ":ffmpeg_adapter_common" ]
    public_deps = [
      "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
      "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
      "//third_party/ffmpeg:libohosffmpeg",
    ]
    external_deps = [ "graphic_2d:surface" ]
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
    }
    relative_install_dir = "media/histreamer_plugins"
  }

  ohos_shared_library("histreamer_plugin_FFmpegMuxers") {
    subsystem_name = "multimedia"
    part_name = "histreamer"
    sources = [
      "muxer/ffmpeg_muxer_plugin.cpp",
      "utils/ffmpeg_codec_map.cpp",
    ]
    public_configs = [
      ":plugin_ffmpeg_adapter_config",
      "//foundation/multimedia/histreamer:histreamer_presets",
    ]
    deps = [ ":ffmpeg_adapter_common" ]
    public_deps = [
      "//foundation/multimedia/histreamer/engine/foundation:histreamer_foundation",
      "//foundation/multimedia/histreamer/engine/plugin:histreamer_plugin_base",
      "//third_party/ffmpeg:libohosffmpeg",
    ]
    external_deps = [ "graphic_2d:surface" ]
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
    }
    relative_install_dir = "media/histreamer_plugins"
  }
}
