# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/histreamer/config.gni")

config("media_foundation_buffer_public_config") {
  include_dirs = [
    "$histreamer_root_dir/interface/kits/c",
    "$histreamer_root_dir/interface/inner_api/buffer",
    "$histreamer_root_dir/../../graphic/graphic_2d/interface/inner_api/surface",
  ]
}

config("media_foundation_buffer_config") {
  defines = [
    "HST_ANY_WITH_NO_RTTI",
    "MEDIA_OHOS",
  ]

  include_dirs = [
    "$histreamer_root_dir/src/buffer/avbuffer/capi",
    "$histreamer_root_dir/src/buffer/avbuffer/include",
    "$histreamer_root_dir/src/buffer/avbuffer_queue/include",
    "$histreamer_root_dir/src/buffer/capi/common",
    "$histreamer_root_dir/interface/inner_api",
    "$histreamer_root_dir/../../graphic/graphic_2d/frameworks/surface/include",
    "$histreamer_root_dir/../../graphic/graphic_2d/utils/sync_fence/export",
    "$histreamer_root_dir/../../graphic/graphic_2d/interface/inner_api/common",
    "$histreamer_root_dir/../../../commonlibrary/memory_utils/libdmabufheap/include",
  ]

  cflags = [
    "-O2",
    "-fPIC",
    "-Wall",
    "-fexceptions",
    "-fno-rtti",
    "-Wno-unused-but-set-variable",
    "-Wno-format",
  ]
  cflags_cc = cflags
}

ohos_shared_library("media_foundation_buffer") {
  install_enable = true
  public_configs = [ ":media_foundation_buffer_public_config" ]
  configs = [ ":media_foundation_buffer_config" ]

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
  }
  sources = [
    "$histreamer_root_dir/src/buffer/avbuffer/av_hardware_memory.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/av_shared_memory_ext.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/av_surface_memory.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/av_virtual_memory.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/avbuffer.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/avbuffer_common.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/avbuffer_utils.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer/avmemory.cpp",
    "$histreamer_root_dir/src/buffer/capi/native_avbuffer.cpp",
    "$histreamer_root_dir/src/meta/any.cpp",
  ]
  sources += [
    "$histreamer_root_dir/src/buffer/avbuffer_queue/avbuffer_queue.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer_queue/avbuffer_queue_consumer.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer_queue/avbuffer_queue_producer.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer_queue/avbuffer_queue_producer_proxy.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer_queue/avbuffer_queue_producer_stub.cpp",
    "$histreamer_root_dir/src/buffer/avbuffer_queue/avbuffer_queue_surface.cpp",
  ]
  public_deps = [ "//third_party/bounds_checking_function:libsec_static" ]

  deps = []
  external_deps = [
    "c_utils:utils",
    "graphic_2d:surface",
    "graphic_2d:sync_fence",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "memory_utils:libdmabufheap",
  ]
  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  subsystem_name = "multimedia"
  part_name = "histreamer"
}

config("media_foundation_osal_config") {
  defines = [
    "HST_ANY_WITH_NO_RTTI",
    "MEDIA_OHOS",
  ]

  include_dirs = [
    "./osal/base",
    "$histreamer_root_dir/interface/inner_api",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//third_party/ffmpeg",
    "//third_party/bounds_checking_function/include",
    "$histreamer_root_dir/../../graphic/graphic_2d/frameworks/surface/include",
    "$histreamer_root_dir/../../graphic/graphic_2d/utils/sync_fence/export",
    "$histreamer_root_dir/../../graphic/graphic_2d/interface/inner_api/common",
    "$histreamer_root_dir/../../../commonlibrary/memory_utils/libdmabufheap/include",
  ]

  cflags = [
    "-O2",
    "-fPIC",
    "-Wall",
    "-fexceptions",
    "-fno-rtti",
    "-Wno-unused-but-set-variable",
    "-Wno-format",
  ]
}

ohos_shared_library("media_foundation_osal") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  configs = [ ":media_foundation_osal_config" ]

  sources = [
    "./osal/filesystem/file_system.cpp",
    "./osal/task/pthread/autolock.cpp",
    "./osal/task/pthread/condition_variable.cpp",
    "./osal/task/pthread/jobutils.cpp",
    "./osal/task/pthread/mutex.cpp",
    "./osal/task/pthread/task.cpp",
    "./osal/task/pthread/thread.cpp",
    "./osal/utils/util.cpp",
  ]

  public_deps = [ "//third_party/ffmpeg:libohosffmpeg" ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:surface",
    "graphic_2d:sync_fence",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
  ]

  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  subsystem_name = "multimedia"
  part_name = "histreamer"
}

config("media_foundation_pipeline_config") {
  defines = [
    "HST_ANY_WITH_NO_RTTI",
    "MEDIA_OHOS",
  ]

  include_dirs = [
    "$histreamer_root_dir/interface/inner_api",
    "//third_party/bounds_checking_function/include",
    "$histreamer_root_dir/../../graphic/graphic_2d/frameworks/surface/include",
    "$histreamer_root_dir/../../graphic/graphic_2d/utils/sync_fence/export",
    "$histreamer_root_dir/../../graphic/graphic_2d/interface/inner_api/common",
    "$histreamer_root_dir/../../../commonlibrary/memory_utils/libdmabufheap/include",
  ]

  cflags = [
    "-O2",
    "-fPIC",
    "-Wall",
    "-fexceptions",
    "-fno-rtti",
    "-Wno-unused-but-set-variable",
    "-Wno-format",
  ]
  cflags_cc = cflags
}

ohos_shared_library("media_foundation_pipeline") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  configs = [ ":media_foundation_pipeline_config" ]

  sources = [
    "./filter/filter.cpp",
    "./filter/filter_factory.cpp",
    "./pipeline/pipeline.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:surface",
    "graphic_2d:sync_fence",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
  ]

  deps = [ ":media_foundation_osal" ]

  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  subsystem_name = "multimedia"
  part_name = "histreamer"
}

config("media_foundation_plugin_config") {
  defines = [
    "HST_ANY_WITH_NO_RTTI",
    "MEDIA_OHOS",
  ]

  if (target_cpu == "arm64") {
    hst_plugin_path = "\"/system/lib64/media/histreamer_plugins\""
  } else {
    hst_plugin_path = "\"/system/lib/media/histreamer_plugins\""
  }
  defines += [
    "HST_PLUGIN_PATH=${hst_plugin_path}",
    "HST_PLUGIN_FILE_TAIL=\".z.so\"",
  ]

  include_dirs = [
    "./plugin",
    "$histreamer_root_dir/src",
    "$histreamer_root_dir/interface/inner_api",
    "$histreamer_root_dir/../../graphic/graphic_2d/frameworks/surface/include",
    "$histreamer_root_dir/../../graphic/graphic_2d/utils/sync_fence/export",
    "$histreamer_root_dir/../../graphic/graphic_2d/interface/inner_api/common",
    "$histreamer_root_dir/../../../commonlibrary/memory_utils/libdmabufheap/include",
    "//third_party/bounds_checking_function/include",
  ]

  cflags = [
    "-O2",
    "-fPIC",
    "-Wall",
    "-fexceptions",
    "-fno-rtti",
    "-Wno-unused-but-set-variable",
    "-Wno-format",
  ]
  cflags_cc = cflags
}

ohos_shared_library("media_foundation_plugin") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  configs = [ ":media_foundation_plugin_config" ]

  sources = [
    "./plugin/plugin_buffer.cpp",
    "./plugin/plugin_loader.cpp",
    "./plugin/plugin_manager.cpp",
    "./plugin/plugin_register.cpp",
  ]

  deps = [ "$histreamer_root_dir/src:media_foundation_buffer" ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:surface",
    "graphic_2d:sync_fence",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
  ]

  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  subsystem_name = "multimedia"
  part_name = "histreamer"
}
